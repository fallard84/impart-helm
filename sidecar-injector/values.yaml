
webhookinjector:
  image:
    repository: impartsecurity/k8s-webhook-injector:alpha
    pullPolicy: Always
    pullSecrets: []
  # specify additional volumes to mount in the sidecar-injector container
  additionalVolumes: []
  # specify where the additional volumes are mounted in the sidecar-injector container
  additionalVolumeMounts: []
  objectSelectorLabel: impart-inspector-injection
  resources: {}
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 443
    targetPort: 8443
  certificate:
    generate: true
    caCrt: ""
    tlsCrt: ""
    tlsKey: ""

proxyinit:
  image:
    repository: impartsecurity/k8s-sidecar-init:alpha
    pullPolicy: Always
  ignorePorts:
    inbound: ""
    outbound: ""

inspector:
  impartApiUrl: "https://api.impartsecurity.net/v0"
  image:
    repository: impartsecurity/inspector:alpha
    pullPolicy: Always
  # reference to kubernetes tls secret config
  tlsSecretRef: ""
  port: 14143
  auth:
    tenantDomain: ""
    jwtAudience: ""
    apiClientId: ""
    apiSecretRef: ""
    accessTokenSecretRef: ""
  additionalVolumes: []
  additionalVolumeMounts: []
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 200m
      memory: 256Mi

controlnode:
  name: controlnode
  enabled: true
  image:
    repository: impartsecurity/control-node:alpha
    pullPolicy: Always
    pullSecrets: []
  port: 7946
  # specify additional volumes to mount in the sidecar-injector container
  additionalVolumes: []
  # specify where the additional volumes are mounted in the sidecar-injector container
  additionalVolumeMounts: []
  resources: {}
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 7946
    targetPort: 7946

